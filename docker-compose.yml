version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: safechat-mongodb
    restart: always
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=safechat
    ports:
      - "27017:27017"
    networks:
      - safechat-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/safechat --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safechat-backend
    restart: always
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/safechat
      - JWT_SECRET=${JWT_SECRET:-change_this_secret_key_in_production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - safechat-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend/im-frontend
      dockerfile: Dockerfile
    container_name: safechat-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - safechat-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:
    driver: local

networks:
  safechat-network:
    driver: bridge
